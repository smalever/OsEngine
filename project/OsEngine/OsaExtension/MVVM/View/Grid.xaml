<UserControl x:Class="OsEngine.OsaExtension.MVVM.View.Grid"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:OsEngine.OsaExtension.MVVM.View"
                xmlns:conver="clr-namespace:OsEngine.OsaExtension.MVVM.Converters"
                xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                mc:Ignorable="d">
       <UserControl.Resources>
                <Style TargetType="TextBlock">
                <Setter Property="MinWidth" Value="30"/>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="MinWidth" Value="30"/>
                </Style>
                <conver:ConverterColorToSide  x:Key="ConvertersColorToSide"/>
                <conver:ConverterIsRunToBool x:Key="ConverterIsRunToBool"/>
        </UserControl.Resources>
    
        <DockPanel>

        <!--<Menu DockPanel.Dock="Bottom">
            <MenuItem Header="меню сервера">
                <MenuItem Header="выбрать сервер" />
            </MenuItem>
            <MenuItem Header="второе меню">
                <MenuItem Header="меню чего-то"/>
            </MenuItem>
        </Menu>-->
        <StatusBar DockPanel.Dock="Top" Margin="3">

            <TextBlock Text="Сервер "  Margin="5,3,0,0" FontSize="16"/>
            <TextBlock Text="{Binding ServerType}" FontSize="16" Height="20"  Margin="5,3,0,3" />
            <TextBlock Text="Счет"  Height="20"  Margin="5"   FontSize="16"/>
            <ComboBox ItemsSource="{Binding StringPortfolios}"
                      SelectedItem="{Binding StringPortfolio}"/>
            <Button Content="Выбрать бумагу"
                    Command="{Binding CommandSelectSecurity}">
            </Button>
            <TextBlock Text="{Binding Header}"  Margin="5" FontSize="16"/>
            <TextBlock Text="Цена" 
                       Margin="10,3" 
                       FontSize="16"/>
            <TextBlock Text="{Binding Price}" 
                       Margin="5,3,0,0"
                       FontSize="16"/>
            <TextBlock Text="монет на бирже =" 
                       Margin="5,3,0,0"
                       FontSize="16"/>
            <TextBlock Text="{Binding SelectSecurBalans}" 
                       Margin="5,3,0,0"
                       FontSize="16"/>
        </StatusBar>
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height ="0"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical">
                    <GroupBox Header="Параметры"    Grid.Row="0"   Width="300" Height="350 "
                      HorizontalAlignment="Left" VerticalAlignment="Top"   Margin="3">
                        <UniformGrid Columns="2"  Margin="3">
                            <TextBlock Text="Стоп шорта"/>
                            <local:DecimalTextBox Text="{Binding StopShort}"/>

                            <TextBlock Text="Точка Старта"/>
                            <local:DecimalTextBox Text="{Binding StartPoint}"/>

                            <TextBlock Text="Стоп лонга"/>
                            <local:DecimalTextBox Text="{Binding StopLong}"/>

                            <TextBlock Text="Количество уровней"/>
                            <local:IntTextBox Text="{Binding CountLevels}"/>
                            <TextBlock Text="Направление сделки"/>
                            <ComboBox ItemsSource="{Binding Directions}"
                          SelectedItem="{Binding Direction}"/>
                            <TextBlock Text="Лот на уровень"/>
                            <StackPanel Orientation="Horizontal">
                                <local:DecimalTextBox Text="{Binding Lot}"
                                                  MinWidth="80"/>
                                <CheckBox Content="$"
                                      IsChecked="{Binding IsChekCurrency}"
                                      ToolTip="Считать лот в $"
                                      Margin="5,0"/>
                            </StackPanel>

                            <TextBlock Text="Тип шага"/>
                            <ComboBox ItemsSource="{Binding StepTypes}"
                          SelectedItem="{Binding StepType}"/>
                            <TextBlock Text="Шаг уровня"/>
                            <local:DecimalTextBox Text="{Binding StepLevel}"/>
                            <TextBlock Text="Профит"/>
                            <local:DecimalTextBox Text="{Binding TakeLevel}"/>
                            <TextBlock Text="Максимально уровней"/>
                            <local:IntTextBox Text="{Binding MaxActiveLevel}"/>
                            <Button Content="Закрыть позиции"
                                Command="{Binding CommandClosePositions}"
                                Margin="3,1"/>
                            <Button Content="Рассчитать"
                            Command="{Binding CommandCalculate}"
                                Margin="3,1"/>
                            <Button Content=" Test API"
                                Command="{Binding CommandTestApi}"
                                Margin="3,1"/>
                            <Button Content="---"
                            Command="{Binding CommandAdd}"
                                Margin="3,1"/>

                        </UniformGrid>

                    </GroupBox>
                    <GroupBox Header=" Позиция "
                      Height="280"
                      VerticalAlignment="Top"
                      Margin="3">

                        <UniformGrid Columns="2">
                            <TextBlock Text="Всего позиций"/>
                            <TextBlock Text="{Binding AllPositionsCount,
                                   StringFormat={}{0:0.###########}}"/>
                            <TextBlock Text="Средняя цена"/>
                            <TextBlock Text="{Binding PriceAverege,
                                   StringFormat={}{0:0.###########}}"/>
                            <TextBlock Text="Комиссия"/>
                            <TextBlock Text="{Binding VarMargine,
                                   StringFormat={}{0:0.###########}}"/>
                            <TextBlock Text="Прибыль"/>
                            <TextBlock Text="{Binding Accum,
                                   StringFormat={}{0:0.###########}}"/>
                            <TextBlock Text="Итого"/>
                            <TextBlock Text="{Binding Total,
                                   StringFormat={}{0:0.###########}}"/>
                        </UniformGrid>
                    </GroupBox>
                    <Button Content="{Binding IsRun,
                        Converter={StaticResource ConverterIsRunToBool}}" FontSize="30"
                        Command="{Binding CommandStartStop}"
                        ToolTip="ПУСК / СТОП робота"
                        Height="60" Margin="5"/>
                </StackPanel>
                <GroupBox  Grid.Column="1" Margin="3"
                       Header=" Уровни">
                    <StackPanel Orientation="Vertical">
                        <DataGrid ItemsSource="{Binding Levels}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          IsReadOnly="{Binding IsReadOnly}">
                            <DataGrid.Columns >
                                <DataGridTextColumn Header=" Цена уровня"
                                            Binding="{Binding PriceLevel,
                                            StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger =LostFocus}"/>
                                <DataGridTemplateColumn Header=" Направление">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding DataContext.Sides,
                                            RelativeSource={RelativeSource AncestorType=UserControl}}"
                                            SelectedItem="{Binding Side,
                                            UpdateSourceTrigger=PropertyChanged}"
                                            Foreground="{Binding Side,
                                            Converter={StaticResource ConvertersColorToSide} }"
                                            IsEnabled="{Binding DataContext.IsEnabled,
                                            RelativeSource={RelativeSource AncestorType=UserControl}}">
                                            </ComboBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header=" объем"
                                            Binding="{Binding Volume,
                                                       StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header=" Цена открытия"
                                            Binding="{Binding OpenPrice,
                                                       StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="комиссия"
                                            Binding="{Binding Margin,
                                            StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header=" прибыль"
                                            Binding="{Binding Accum,
                                            StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="Limit Volume"
                                            Binding="{Binding LimitVolume,
                                            StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="PassVolume"
                                            Binding="{Binding PassVolume,
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header=" Цена профита"
                                            Binding="{Binding TakePrice,
                                            StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=LostFocus}"/>
                                <DataGridTextColumn Header="Take Volume"
                                            Binding="{Binding TakeVolume,
                                            StringFormat={}{0:0.###########},
                                            UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="PassTake"
                                            Binding="{Binding PassTake,
                                            UpdateSourceTrigger=PropertyChanged}"/>

                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Content=" Добавить уровень "
                            Command="{Binding CommandAddRow}"/>
                    </StackPanel>
                </GroupBox>
            </Grid>

        </Grid>
    </DockPanel>
</UserControl>
